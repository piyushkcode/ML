# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score


df = pd.read_csv(r'E:\ML Dataset\LP-1 Dataset\Regression\advertising.csv')
df.head()

print(df.columns)
print(df.dtypes)

# Check the data structure
print(df.info())
print(df.head())

# Step 1: Exploratory Data Analysis
# Scatter plot to visually inspect the relationship
plt.figure(figsize=(8, 5))
plt.scatter(df['TV'], df['Sales'], color='blue')
plt.xlabel('TV Advertising Spending ($)')
plt.ylabel('Sales')
plt.title('Scatter plot of TV Advertising Spending vs Sales')
plt.show()


# Step 2: Model Building
X = df['TV'].values.reshape(-1, 1)  # Independent variable
y = df['Sales']  # Dependent variable

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit the Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)


# Step 3: Regression Results
# Coefficient and Intercept
print("Coefficient:", model.coef_[0])
print("Intercept:", model.intercept_)

# Predict on test set
y_pred = model.predict(X_test)

# Model Evaluation
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("R-squared:", r2_score(y_test, y_pred))



# Step 4: Plotting the Regression Line
plt.figure(figsize=(8, 5))
plt.scatter(X, y, color='blue', label='Actual data')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Regression Line')
plt.xlabel('TV Advertising Spending ($)')
plt.ylabel('Sales')
plt.title('Regression Line - TV Advertising Spending vs Sales')
plt.legend()
plt.show()
